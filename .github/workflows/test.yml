name: test_build

on:
  push:
    # triggered on commit pushes on the "dev" branch
    branches:
      - 'dev'
    # triggered on tag pushes with tags beginning with either "v" or "dev"
    tags:
      - 'v*'
      - 'dev*'
      - 'ci*'
      - 'build*'
      - 'test*'
  pull_request:
    # also triggered by pull requests on the "dev" branch
    branches:
      - 'dev'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  PV_TAG: v5.11.1-headless
  PV_REPO: topology-tool-kit/ttk-paraview


jobs:

  # -----------------#
  # Test macOS build #
  # -----------------#
  test-build-macos:
    runs-on: macos-12
    if: ${{ github.repository_owner == 'topology-tool-kit' || !contains(github.ref, 'heads') }}
    env:
      CCACHE_DIR: /Users/runner/work/ttk/.ccache
      CCACHE_MAXSIZE: 200M
    steps:
    - uses: actions/checkout@v3
      name: Checkout TTK source code

    - name: Install macOS dependencies
      run: |
        # ParaView dependencies
        brew install --cask xquartz
        brew install wget llvm libomp ninja python@3.12 open-mpi
        # TTK dependencies
        brew install boost eigen graphviz numpy websocketpp ccache
        # prepend ccache to system path
        echo "$(brew --prefix)/opt/ccache/libexec" >> $GITHUB_PATH

    - name: Install optional dependencies
      uses: ./.github/actions/install-deps-unix

    - name: Fetch archived ccache
      continue-on-error: true
      run: |
        wget https://github.com/topology-tool-kit/ttk/releases/download/ccache/ttk-ccache-macOS.tar.gz

    - name: Decompress ccache archive
      continue-on-error: true
      run: |
        tar xzf ttk-ccache-macOS.tar.gz
        rm -rf /Users/runner/work/ttk/.ccache
        mv .ccache /Users/runner/work/ttk/

    - name: Fetch TTK-ParaView headless macOS binary archive
      run: |
        wget https://github.com/${{ env.PV_REPO }}/releases/download/${{ env.PV_TAG }}/ttk-paraview-headless.tar.gz

    - name: Install ParaView
      run: |
        tar xzf ttk-paraview-headless.tar.gz
        sudo cp -r ttk-paraview/* /usr/local
        pvpython -m pip install scikit-learn 

    - name: Set compilers as environment variables
      run: |
        echo "CC=$(brew --prefix llvm)/bin/clang" >> $GITHUB_ENV
        echo "CXX=$(brew --prefix llvm)/bin/clang++" >> $GITHUB_ENV

    - name: Create & configure TTK build directory
      run: |
        mkdir build
        cd build
        cmake \
          -DCMAKE_BUILD_TYPE=Release \
          -DCMAKE_C_COMPILER_LAUNCHER=ccache \
          -DCMAKE_CXX_COMPILER_LAUNCHER=ccache \
          -DTTK_BUILD_PARAVIEW_PLUGINS=TRUE \
          -DTTK_BUILD_VTK_WRAPPERS=TRUE \
          -DTTK_BUILD_STANDALONE_APPS=TRUE \
          -DTTK_ENABLE_KAMIKAZE=TRUE \
          -DTTK_ENABLE_MPI=TRUE \
          -DTTK_ENABLE_CPU_OPTIMIZATION=FALSE \
          -DTTK_ENABLE_SHARED_BASE_LIBRARIES=TRUE \
          -DTTK_IMPLICIT_PRECONDITIONS_THRESHOLD=64*64*64 \
          -GNinja \
          $GITHUB_WORKSPACE
      env:
        CXXFLAGS: -Werror

    - uses: ammaraskar/gcc-problem-matcher@master
    - name: Build & install TTK
      run: |
        cd build
        cmake --build . --parallel
        sudo cmake --build . --target install

    - name: Set PYTHONPATH for macOS pvpython
      run: |
        # pvpython does not embed the correct PYTHONPATH
        echo "PYTHONPATH=/usr/local/lib/python3.12/site-packages:$PYTHONPATH" >> $GITHUB_ENV

    - name: Run TTK tests
      uses: ./.github/actions/test-ttk-unix

    - uses: actions/checkout@v3
      with:
        repository: "topology-tool-kit/ttk-data"
        ref: "dev"
        path: "ttk-data"
      name: Checkout ttk-data

    - name: Run ttk-data states [NOT ENFORCED]
      if: false
      id: validate
      continue-on-error: true
      run: |
        cd ttk-data/tests
        mkdir output_screenshots
        python3 -u validate.py || (tar zcf screenshots.tar.gz output_screenshots && false)
      env:
        PV_PLUGIN_PATH: /usr/local/bin/plugins/TopologyToolKit

    - name: Upload result screenshots
      if: steps.validate.outcome == 'failure'
      uses: actions/upload-artifact@v3
      with:
        name: screenshots-macOS.tar.gz
        path: ttk-data/tests/screenshots.tar.gz
        retention-days: 10

    - name: Run ttk-data Python scripts
      run: |
        cd ttk-data
        pvpython -u python/run.py
      env:
        PV_PLUGIN_PATH: /usr/local/bin/plugins/TopologyToolKit

    - name: Test ttk-data Python scripts results [NOT ENFORCED]
      continue-on-error: true
      run: |
        cd ttk-data
        cat python/res.json
        diff python/hashes/macOS.json python/res.json

    - name: Archive cache
      run: |
        ccache -s
        ccache -c
        cd /Users/runner/work/ttk
        tar czf ttk-ccache.tar.gz .ccache

    - name: Upload ccache archive
      if: ${{ github.repository_owner == 'topology-tool-kit' && contains(github.ref, 'heads') }}
      uses: actions/upload-artifact@v3
      with:
        name: ttk-ccache-macOS
        path: /Users/runner/work/ttk/ttk-ccache.tar.gz
        retention-days: 2

